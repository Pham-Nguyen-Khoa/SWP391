extends ../../layouts/default.pug
include ../../mixins/mixin-title.pug

block append main
  style.
    body {
      background-color: #f0f4f8;
      font-family: 'Arial', sans-serif;
    }
    label {
      font-weight: 600;
      font-size: 20px;
    }
    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .delete-button:hover {
      background-color: #c82333;
    }

block main
  +title("Đơn Hiện Tại")
  if currentAppointment
    .card(style="box-shadow: 0px 1px 15px 4px rgb(0 0 0 / 30%); border-radius: 8px; border: none; margin: 60px 200px 80px ; background-color: #f7fbff")
      .card-header(style="background-color: #C7E3ED; font-weight: bold; font-size: 1.3em; padding: 15px; border-top-left-radius: 8px; border-top-right-radius: 8px; text-align: center;") Thông tin cuộc hẹn
      .card-body(style="padding: 20px; font-size: 20px ;padding: 20px 69px")   
        .row 
            .col-7(style="padding-right: 100px;")
                p.lead
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Khách hàng
                b :  #{currentAppointment.Name}
                p.lead
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Dịch vụ
                b :  Cải Thiện Môi Trường
                p.lead
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Ngày
                b :  #{currentAppointment.DateFormat}
                p.lead
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Lịch hẹn
                b :  #{currentAppointment.Shift}
                p.lead
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Số điện thoại
                b :  #{currentAppointment.PhoneNumber}
                if(currentAppointment.Address)
                  p.lead
                  b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Nơi Khám
                  b :  Tại nhà
                  p.lead
                  b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Địa chỉ
                  b :  #{currentAppointment.Address}
                p.lead
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Trạng thái
                b :  Đang thực hiện
                p.lead
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Mô tả của khách hàng
                p(style="background-color: #b7cfd587; padding: 10px; border-radius: 20px;")   #{currentAppointment.HealthKoi}
                
                p.lead
            .col-5  
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Bác sĩ
                b  :  #{user.FullName}
                br
                b(style=" min-width: 180px; display: inline-block; font-weight: bold;") ◉ Chuyên ngành
                b  :  #{user.Specialization}
                br
                img(src=`${user.Avatar}` style="width: 250px; height: 250px; object-fit: cover; border-radius: 20px; margin: 30px 0 0 0;") 
    .current-appointment-form
      form(action="/doctor/update-pond-record" method="POST" id="appointmentForm")
        input(type="hidden" name="appointmentId" value=currentAppointment.AppointmentID)
        
        .pond-records
          .pond-record(style="position: relative; box-shadow: 0px 1px 15px 4px rgb(0 0 0 / 30%); border-radius: 8px; border: none; margin-bottom: 30px; background-color: #f7fbff;")
            .card-header(style="background-color: #C7E3ED; font-weight: bold; font-size: 1.3em; padding: 15px; border-top-left-radius: 8px; border-top-right-radius: 8px; position: relative;") 
              span(style=" font-weight: bold;  color: black  ; padding: 10px; border-radius: 5px;") Ghi nhận tình trạng hồ 1
            .card-body
              .form-group
                label(for="problem") Vấn đề
                textarea.form-control(name="Problem" rows="3")
              .form-group
                label(for="solution") Giải pháp
                textarea.form-control(name="Solution" rows="3")
              .form-group
                label(for="description") Mô tả chi tiết
                textarea.form-control(name="Description" rows="3")
            .card-header(style="background-color: #C7E3ED; font-weight: bold; font-size: 1.3em; padding: 15px; border-top-left-radius: 8px; border-top-right-radius: 8px;") Chỉ số hồ cá 1
            .card-body
              .row
                .col-md-4
                  .form-group
                    label(for="volume") Thể tích (m³)
                    input.form-control(type="number" name="Volume" step="0.01")
                .col-md-4
                  .form-group
                    label(for="temperature") Nhiệt độ (°C)
                    input.form-control(type="number" name="Temperature" step="0.1")
                .col-md-4
                  .form-group
                    label(for="pH") pH
                    input.form-control(type="number" name="pH" step="0.1")
              .row
                .col-md-4
                  .form-group
                    label(for="oxygen") Oxy hòa tan (mg/L)
                    input.form-control(type="number" name="Oxygen" step="0.01")
                .col-md-4
                  .form-group
                    label(for="salt") Độ mặn (ppt)
                    input.form-control(type="number" name="Salt" step="0.1")
                .col-md-4
                  .form-group
                    label(for="co2") CO2 (ppm)
                    input.form-control(type="number" name="CO2" step="0.1")
              .row
                .col-md-4
                  .form-group
                    label(for="nitrite") Nitrite (mg/L)
                    input.form-control(type="number" name="Nitrite" step="0.01")
                .col-md-4
                  .form-group
                    label(for="nitrate") Nitrate (mg/L)
                    input.form-control(type="number" name="Nitrate" step="0.01")
        .text-center.mt-4
          a.btn.btn-lg#prescribeMedicationBtn.mr-5(href=`/doctor/current-appointment/prescribe-medication` style="background-color: #4294b1c7; color: black; padding: 10px;") <i class="fa-solid fa-capsules"></i> Kê đơn thuốc
          //- button.btn.btn-lg(type="submit" style="background-color: #4294b1c7; color: black; padding: 10px;") Cập nhật và Hoàn thành
        button.btn.btn-lg(type="button" id="addPondBtn" style="background-color: #2dde29c7; color: black; padding: 10px;") <i class="fa-solid fa-plus"></i> Thêm hồ cá

  else
    .alert.alert-info.text-center
      h2 Hiện tại không có đơn đang xử lý.

  script.
    let pondCount = 1;

    function saveFormData() {
      const form = document.getElementById('appointmentForm');
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      const appointmentId = form.elements['appointmentId'].value;
      let pondData = JSON.parse(localStorage.getItem(`appointmentData`)) || [];
      pondData[pondCount - 1] = data; // Update the current pond data
      localStorage.setItem(`appointmentData`, JSON.stringify(pondData));
    }

    function restoreFormData() {
      const form = document.getElementById('appointmentForm');
      const appointmentId = form.elements['appointmentId'].value;
      const savedData = localStorage.getItem(`appointmentData`);
      if (savedData) {
        const data = JSON.parse(savedData);
        data.forEach((pond, index) => {
          if (index > 0) addPondRecord();
          const pondRecord = document.querySelectorAll('.pond-record')[index];
          Object.keys(pond).forEach(key => {
            const input = pondRecord.querySelector(`[name="${key}"]`);
            if (input) {
              input.value = pond[key];
            }
          });
        });
      } else {
        form.reset();
      }
    }

    function addPondRecord() {
      const pondRecords = document.querySelector('.pond-records');
      const newPondRecord = pondRecords.firstElementChild.cloneNode(true);
      newPondRecord.querySelectorAll('input, textarea').forEach(input => input.value = '');
      pondCount++;
      newPondRecord.querySelectorAll('.card-header span')[0].innerText = `Ghi nhận tình trạng hồ ${pondCount}`;
      newPondRecord.querySelectorAll('.card-header')[1].innerText = `Chỉ số hồ cá ${pondCount}`;
      const deleteButton = document.createElement('button');
      deleteButton.type = 'button';
      deleteButton.innerText = 'Xóa hồ';
      deleteButton.className = 'delete-button';
      deleteButton.style.position = 'absolute';
      deleteButton.style.right = '3%';
      deleteButton.style.borderRadius = '5px';
      deleteButton.style.width = '100px';
      deleteButton.style.backgroundColor = '#eb7b7b';
      deleteButton.style.border = '2px solid #9fbfc5';
      deleteButton.style.cursor = 'pointer';
      deleteButton.onclick = function() {
        newPondRecord.remove();
        pondCount--;
        updatePondHeaders();
        saveFormData(); 
      };
      newPondRecord.querySelector('.card-header').appendChild(deleteButton);
      pondRecords.appendChild(newPondRecord);
    }

    function updatePondHeaders() {
      const pondRecords = document.querySelectorAll('.pond-record');
      pondRecords.forEach((pondRecord, index) => {
        pondRecord.querySelectorAll('.card-header span')[0].innerText = `Ghi nhận tình trạng hồ ${index + 1}`;
        pondRecord.querySelectorAll('.card-header')[1].innerText = `Chỉ số hồ cá ${index + 1}`;
      });
    }

    document.getElementById('appointmentForm').addEventListener('change', saveFormData);
    document.querySelectorAll('textarea').forEach(textarea => {
      textarea.addEventListener('input', saveFormData);
    });
    window.addEventListener('load', restoreFormData);
    document.getElementById('prescribeMedicationBtn').addEventListener('click', function(e) {
      saveFormData(); 
      localStorage.setItem('pondCount', pondCount); 
    });

    document.getElementById('addPondBtn').addEventListener('click', addPondRecord);